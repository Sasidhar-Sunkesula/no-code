name: Deploy to VM

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Add client environment variables
        run: |
          echo "VITE_API_URL=${{ secrets.API_URL }}" >> client/.env
          echo "VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}" >> client/.env

      - name: Add DB URL
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> packages/db/.env

      - name: Add server environment variables
        run: |
          echo "GITHUB_ACCESS_TOKEN=${{ secrets.ACCESS_TOKEN }}" > server/.env
          echo "GROQ_API_KEY=${{ secrets.GROQ_API_KEY }}" >> server/.env
          echo "GOOGLE_GENERATIVE_AI_API_KEY=${{ secrets.GOOGLE_GENERATIVE_AI_API_KEY }}" >> server/.env
          echo "OVH_API_KEY=${{ secrets.OVH_API_KEY }}" >> server/.env
          echo "NINETEEN_API_KEY=${{ secrets.NINETEEN_API_KEY }}" >> server/.env
          echo "NOVITA_API_KEY=${{ secrets.NOVITA_API_KEY }}" >> server/.env
          echo "CLERK_SECRET_KEY=${{ secrets.CLERK_SECRET_KEY }}" >> server/.env
          echo "CLERK_PUBLISHABLE_KEY=${{ secrets.CLERK_PUBLISHABLE_KEY }}" >> server/.env
          echo "NODE_ENV=production" >> server/.env
          echo "PORT=3000" >> server/.env

      - name: Install dependencies
        run: |
          rm -rf package-lock.json
          npm install

      - name: Build client
        run: npm run build:client

      - name: Build server
        run: npm run build:server

      - name: Copy files into EC2 instance
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "."
          target: "./no-code"

      - name: Deploy with pm2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd no-code
            npm install -g pm2 serve
            pm2 stop no-code-client || true
            pm2 stop no-code-server || true
            pm2 delete no-code-client || true
            pm2 delete no-code-server || true
            pm2 serve -n no-code-client client/dist 5173 --spa
            cd server
            pm2 start -n no-code-server dist/index.js
            pm2 save
